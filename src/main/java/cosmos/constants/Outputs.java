package cosmos.constants;

import cosmos.statics.handlers.OutputFormatter;
import org.spongepowered.api.command.CommandException;
import org.spongepowered.api.text.Text;
import org.spongepowered.api.text.TextTemplate;
import org.spongepowered.api.text.format.TextColor;
import org.spongepowered.api.text.format.TextColors;
import org.spongepowered.api.text.format.TextStyle;

import java.util.Arrays;
import java.util.Map;
import java.util.function.Supplier;
import java.util.stream.Collectors;
import java.util.stream.IntStream;

public enum Outputs {
    // Usages
    USAGE_BACKUP_DELETE(TextColors.GREEN, "cm backup delete <{{6}}>"),
    USAGE_BACKUP_LIST(TextColors.GREEN, "cm backup list [<{{2}}>]"),
    USAGE_BACKUP_RESET(TextColors.GREEN, "cm backup reset <{{6}}>"),
    USAGE_BACKUP_RESTORE(TextColors.GREEN, "cm backup restore <{{6}}>"),
    USAGE_BACKUP_SAVE(TextColors.GREEN, "cm backup save <{{2}} | {{2}}>"),
    USAGE_BACKUP_TAG(TextColors.GREEN, "cm backup tag <{{6}}> <{{6}}>"),
    USAGE_BORDER_CENTER(TextColors.GREEN, "cm border [<{{2}}>] center [<{{6}}>]"),
    USAGE_BORDER_DAMAGE_AMOUNT(TextColors.GREEN, "cm border [<{{2}}>] damageamount [<{{6}}>]"),
    USAGE_BORDER_DAMAGE_THRESHOLD(TextColors.GREEN, "cm border [<{{2}}>] damagethreshold [<{{6}}>]"),
    USAGE_BORDER_INFORMATION(TextColors.GREEN, "cm border [<{{2}}>] information"),
    USAGE_BORDER_OPERATE(TextColors.GREEN, "cm border [<{{2}}>] operate <{{6}}> <{{6}}> [<{{6}}>]"),
    USAGE_BORDER_REMOVE(TextColors.GREEN, "cm border [<{{2}}>] remove"),
    USAGE_BORDER_SIZE(TextColors.GREEN, "cm border [<{{2}}>] size [<{{6}}>]"),
    USAGE_BORDER_TRANSPOSE(TextColors.GREEN, "cm border [<{{2}}>] transpose <{{6}}> <{{6}}> [<{{6}}>]"),
    USAGE_BORDER_WARNING_DISTANCE(TextColors.GREEN, "cm border [<{{2}}>] warningdistance [<{{6}}>]"),
    USAGE_BORDER_WARNING_TIME(TextColors.GREEN, "cm border [<{{2}}>] warningtime [<{{6}}>]"),
    USAGE_DELETE(TextColors.GREEN, "cm delete <{{2}} | {{2}} | {{2}}>"),
    USAGE_DISABLE(TextColors.GREEN, "cm delete <{{2}}>"),
    USAGE_DUPLICATE(TextColors.GREEN, "cm duplicate <{{2}}> <{{2}}>"),
    USAGE_ENABLE(TextColors.GREEN, "cm enable <{{2}}>"),
    USAGE_HELP(TextColors.GREEN, "cm help [<{{6}}>]"),
    USAGE_IMPORT(TextColors.GREEN, "cm import <{{2}}>"),
    USAGE_INFORMATION(TextColors.GREEN, "cm information <{{2}} | {{2}} | {{2}}>"),
    USAGE_LIST(TextColors.GREEN, "cm list [<{{6}}>]"),
    USAGE_LOAD(TextColors.GREEN, "cm load <{{2}}>"),
    USAGE_MOVE(TextColors.GREEN, "cm move [<{{6}}>] [<{{2}}>] [<{{6}}>] [<{{6}}>] [<{{6}}>]"),
    USAGE_MOVE_TO(TextColors.GREEN, "cm move <{{6}}> [<{{6}}>] [<{{6}}>]"),
    USAGE_NEW(TextColors.GREEN, "cm new <{{2}}> [<{{6}}>] [<{{6}}>] [<{{6}}>]"),
    USAGE_PER_WORLD(TextColors.GREEN, "cm perworld <{{6}}> <{{6}}> [<{{6}}>]"),
    USAGE_POSITION(TextColors.GREEN, "cm position [<{{6}}>] [<{{6}}>]"),
    USAGE_PROPERTIES_ALLOW_COMMAND_BLOCKS(TextColors.GREEN, "cm properties [<{{2}}>] allowcommandblocks [<{{6}}>]"),
    USAGE_PROPERTIES_DIFFICULTY(TextColors.GREEN, "cm properties [<{{2}}>] difficulty [<{{6}}>]"),
    USAGE_PROPERTIES_GAME_MODE(TextColors.GREEN, "cm properties [<{{2}}>] gamemode [<{{6}}>]"),
    USAGE_PROPERTIES_GENERATE_SPAWN_ON_LOAD(TextColors.GREEN, "cm properties [<{{2}}>] generatespawnonload [<{{6}}>]"),
    USAGE_PROPERTIES_GENERATOR_TYPE(TextColors.GREEN, "cm properties [<{{2}}>] generatortype [<{{6}}>]"),
    USAGE_PROPERTIES_HARDCORE(TextColors.GREEN, "cm properties [<{{2}}>] hardcore [<{{6}}>]"),
    USAGE_PROPERTIES_KEEP_SPAWN_LOADED(TextColors.GREEN, "cm properties [<{{2}}>] keepspawnloaded [<{{6}}>]"),
    USAGE_PROPERTIES_LOAD_ON_STARTUP(TextColors.GREEN, "cm properties [<{{2}}>] loadonstartup [<{{6}}>]"),
    USAGE_PROPERTIES_PVP(TextColors.GREEN, "cm properties [<{{2}}>] pvp [<{{6}}>]"),
    USAGE_PROPERTIES_RULES(TextColors.GREEN, "cm properties [<{{2}}>] rules <{{6}}> [<{{6}}>]"),
    USAGE_PROPERTIES_SPAWN_POSITION(TextColors.GREEN, "cm properties [<{{2}}>] spawnposition [<{{6}}>]"),
    USAGE_RENAME(TextColors.GREEN, "cm rename <{{2}}> <{{2}}>"),
    USAGE_SCOREBOARD_OBJECTIVES_ADD(TextColors.GREEN, "cm scoreboard [<{{2}}>] objectives add <{{6}}> <{{6}}> [<{{6}}>]"),
    USAGE_SCOREBOARD_OBJECTIVES_LIST(TextColors.GREEN, "cm scoreboard [<{{2}}>] objectives list"),
    USAGE_SCOREBOARD_OBJECTIVES_MODIFY(TextColors.GREEN, "cm scoreboard [<{{2}}>] objectives modify <{{6}}> <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_OBJECTIVES_REMOVE(TextColors.GREEN, "cm scoreboard [<{{2}}>] objectives remove <{{6}}>"),
    USAGE_SCOREBOARD_OBJECTIVES_SET_DISPLAY(TextColors.GREEN, "cm scoreboard [<{{2}}>] objectives setdisplay <{{6}}> [<{{6}}>]"),
    USAGE_SCOREBOARD_PLAYERS_ADD(TextColors.GREEN, "cm scoreboard [<{{2}}>] players add <{{6}}> <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_PLAYERS_GET(TextColors.GREEN, "cm scoreboard [<{{2}}>] players get <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_PLAYERS_LIST(TextColors.GREEN, "cm scoreboard [<{{2}}>] players list [<{{6}}>]"),
    USAGE_SCOREBOARD_PLAYERS_OPERATION(TextColors.GREEN, "cm scoreboard [<{{2}}>] players operation <{{6}}> <{{6}}> <{{6}}> <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_PLAYERS_RANDOM(TextColors.GREEN, "cm scoreboard [<{{2}}>] players random <{{6}}> <{{6}}> <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_PLAYERS_REMOVE(TextColors.GREEN, "cm scoreboard [<{{2}}>] players remove <{{6}}> <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_PLAYERS_RESET(TextColors.GREEN, "cm scoreboard [<{{2}}>] players reset <{{6}}> [<{{6}}>]"),
    USAGE_SCOREBOARD_PLAYERS_SET(TextColors.GREEN, "cm scoreboard [<{{2}}>] players set <{{6}}> <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_PLAYERS_TEST(TextColors.GREEN, "cm scoreboard [<{{2}}>] players test <{{6}}> <{{6}}> <{{6}}> [<{{6}}>]"),
    USAGE_SCOREBOARD_TEAMS_ADD(TextColors.GREEN, "cm scoreboard [<{{2}}>] teams add <{{6}}> [<{{6}}>]"),
    USAGE_SCOREBOARD_TEAMS_EMPTY(TextColors.GREEN, "cm scoreboard [<{{2}}>] teams empty <{{6}}>"),
    USAGE_SCOREBOARD_TEAMS_JOIN(TextColors.GREEN, "cm scoreboard [<{{2}}>] teams join <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_TEAMS_LEAVE(TextColors.GREEN, "cm scoreboard [<{{2}}>] teams leave <{{6}}>"),
    USAGE_SCOREBOARD_TEAMS_LIST(TextColors.GREEN, "cm scoreboard [<{{2}}>] teams list [<{{6}}>]"),
    USAGE_SCOREBOARD_TEAMS_OPTION(TextColors.GREEN, "cm scoreboard [<{{2}}>] teams option <{{6}}> <{{6}}> <{{6}}>"),
    USAGE_SCOREBOARD_TEAMS_REMOVE(TextColors.GREEN, "cm scoreboard [<{{2}}>] teams remove <{{6}}>"),
    USAGE_TIME_CALENDAR(TextColors.GREEN, "cm time <{{2}}> calendar"),
    USAGE_TIME_DAWN(TextColors.GREEN, "cm time <{{2}}> dawn"),
    USAGE_TIME_DUSK(TextColors.GREEN, "cm time <{{2}}> dusk"),
    USAGE_TIME_IGNORE_PLAYERS_SLEEPING(TextColors.GREEN, "cm time <{{2}}> ignoreplayerssleeping [<{{6}}>] [<{{6}}>]"),
    USAGE_TIME_MIDDAY(TextColors.GREEN, "cm time <{{2}}> midday"),
    USAGE_TIME_MIDNIGHT(TextColors.GREEN, "cm time <{{2}}> midnight"),
    USAGE_TIME_REAL_TIME(TextColors.GREEN, "cm time <{{2}}> realtime [<{{6}}>] [<{{6}}>]"),
    USAGE_TIME_SET(TextColors.GREEN, "cm time <{{2}}> set <{{6}}>"),
    USAGE_TIME_TOMORROW(TextColors.GREEN, "cm time <{{2}}> tomorrow"),
    USAGE_UNLOAD(TextColors.GREEN, "cm unload <{{2}}>"),
    USAGE_VIEW_DISTANCE(TextColors.GREEN, "cm viewdistance <{{2}}> [<{{6}}>]"),
    USAGE_WEATHER_FORECAST(TextColors.GREEN, "cm weather [<{{2}}>] forecast"),
    USAGE_WEATHER_RAIN(TextColors.GREEN, "cm weather [<{{2}}>] rain [<{{6}}>]"),
    USAGE_WEATHER_SUN(TextColors.GREEN, "cm weather [<{{2}}>] sun [<{{6}}>]"),
    USAGE_WEATHER_THUNDER(TextColors.GREEN, "cm weather [<{{2}}>] thunder [<{{6}}>]"),

    // Examples
    EX_BACKUP_DELETE_0(TextColors.GREEN, "cm backup delete {{6}}"),
    EX_BACKUP_LIST_0(TextColors.GREEN, "cm backup list"),
    EX_BACKUP_LIST_1(TextColors.GREEN, "cm backup list {{2}}"),
    EX_BACKUP_RESET_0(TextColors.GREEN, "cm backup reset {{6}}"),
    EX_BACKUP_RESTORE_0(TextColors.GREEN, "cm backup restore {{6}}"),
    EX_BACKUP_SAVE_0(TextColors.GREEN, "cm backup save {{2}}"),
    EX_BACKUP_TAG_0(TextColors.GREEN, "cm backup tag {{6}} {{6}}"),
    EX_BORDER_CENTER_0(TextColors.GREEN, "cm border {{2}} center {{6}} {{6}}"),
    EX_BORDER_CENTER_1(TextColors.GREEN, "cm border center {{6}} {{6}}"),
    EX_BORDER_CENTER_2(TextColors.GREEN, "cm border center {{6}}"),
    EX_BORDER_CENTER_3(TextColors.GREEN, "cm border {{2}} center"),
    EX_BORDER_CENTER_4(TextColors.GREEN, "cm border center"),
    EX_BORDER_DAMAGE_AMOUNT_0(TextColors.GREEN, "cm border {{2}} damageamount {{6}}"),
    EX_BORDER_DAMAGE_AMOUNT_1(TextColors.GREEN, "cm border damageamount {{6}}"),
    EX_BORDER_DAMAGE_AMOUNT_2(TextColors.GREEN, "cm border {{2}} damageamount"),
    EX_BORDER_DAMAGE_AMOUNT_3(TextColors.GREEN, "cm border damageamount"),
    EX_BORDER_DAMAGE_THRESHOLD_0(TextColors.GREEN, "cm border {{2}} damagethreshold {{6}}"),
    EX_BORDER_DAMAGE_THRESHOLD_1(TextColors.GREEN, "cm border damagethreshold {{6}}"),
    EX_BORDER_DAMAGE_THRESHOLD_2(TextColors.GREEN, "cm border {{2}} damagethreshold"),
    EX_BORDER_DAMAGE_THRESHOLD_3(TextColors.GREEN, "cm border damagethreshold"),
    EX_BORDER_INFORMATION_0(TextColors.GREEN, "cm border {{2}} information"),
    EX_BORDER_INFORMATION_1(TextColors.GREEN, "cm border info"),
    EX_BORDER_OPERATE_0(TextColors.GREEN, "cm border {{2}} operate {{6}} {{6}} {{6}}"),
    EX_BORDER_OPERATE_1(TextColors.GREEN, "cm border operate {{6}} {{6}}"),
    EX_BORDER_OPERATE_2(TextColors.GREEN, "cm border {{2}} operate {{6}} {{6}}"),
    EX_BORDER_OPERATE_3(TextColors.GREEN, "cm border operate {{6}} {{6}} {{6}}"),
    EX_BORDER_REMOVE_0(TextColors.GREEN, "cm border {{2}} remove"),
    EX_BORDER_REMOVE_1(TextColors.GREEN, "cm border remove"),
    EX_BORDER_SIZE_0(TextColors.GREEN, "cm border {{2}} size {{6}}"),
    EX_BORDER_SIZE_1(TextColors.GREEN, "cm border size {{6}}"),
    EX_BORDER_SIZE_2(TextColors.GREEN, "cm border {{2}} size"),
    EX_BORDER_SIZE_3(TextColors.GREEN, "cm border size"),
    EX_BORDER_TRANSPOSE_0(TextColors.GREEN, "cm border {{2}} transpose {{6}} {{6}} {{6}}"),
    EX_BORDER_TRANSPOSE_1(TextColors.GREEN, "cm border {{2}} transpose {{6}} {{6}}"),
    EX_BORDER_TRANSPOSE_2(TextColors.GREEN, "cm border transpose {{6}} {{6}} {{6}}"),
    EX_BORDER_TRANSPOSE_3(TextColors.GREEN, "cm border transpose {{6}} {{6}}"),
    EX_BORDER_WARNING_DISTANCE_0(TextColors.GREEN, "cm border {{2}} warningdistance {{6}}"),
    EX_BORDER_WARNING_DISTANCE_1(TextColors.GREEN, "cm border warningdistance {{6}}"),
    EX_BORDER_WARNING_DISTANCE_2(TextColors.GREEN, "cm border {{2}} warningdistance"),
    EX_BORDER_WARNING_DISTANCE_3(TextColors.GREEN, "cm border warningdistance"),
    EX_BORDER_WARNING_TIME_0(TextColors.GREEN, "cm border {{2}} warningtime {{6}}"),
    EX_BORDER_WARNING_TIME_1(TextColors.GREEN, "cm border warningtime {{6}}"),
    EX_BORDER_WARNING_TIME_2(TextColors.GREEN, "cm border {{2}} warningtime"),
    EX_BORDER_WARNING_TIME_3(TextColors.GREEN, "cm border warningtime"),
    EX_DELETE_0(TextColors.GREEN, "cm delete {{2}}"),
    EX_DISABLE_0(TextColors.GREEN, "cm disable {{2}}"),
    EX_DUPLICATE_0(TextColors.GREEN, "cm duplicate {{2}} {{6}}"),
    EX_ENABLE_0(TextColors.GREEN, "cm enable {{2}}"),
    EX_HELP_0(TextColors.GREEN, "cm help"),
    EX_HELP_1(TextColors.GREEN, "cm help {{6}}"),
    EX_IMPORT_0(TextColors.GREEN, "cm import {{2}}"),
    EX_INFORMATION_0(TextColors.GREEN, "cm information {{2}}"),
    EX_LIST_0(TextColors.GREEN, "cm list"),
    EX_LIST_1(TextColors.GREEN, "cm list {{6}}"),
    EX_LOAD_0(TextColors.GREEN, "cm load {{2}}"),
    EX_MOVE_0(TextColors.GREEN, "cm move {{6}} {{2}} {{6}} {{6}} {{6}} {{6}} {{6}} {{6}}"),
    EX_MOVE_1(TextColors.GREEN, "cm move"),
    EX_MOVE_2(TextColors.GREEN, "cm move {{6}}"),
    EX_MOVE_3(TextColors.GREEN, "cm move {{2}} {{6}} {{6}} {{6}}"),
    EX_MOVE_4(TextColors.GREEN, "cm move {{6}} {{2}} {{6}}"),
    EX_MOVE_TO_0(TextColors.GREEN, "cm moveto {{6}} {{6}}"),
    EX_MOVE_TO_1(TextColors.GREEN, "cm moveto {{6}}"),
    EX_MOVE_TO_2(TextColors.GREEN, "cm moveto {{6}} {{6}}"),
    EX_MOVE_TO_3(TextColors.GREEN, "cm moveto {{6}} {{6}} {{6}}"),
    EX_NEW_0(TextColors.GREEN, "cm new {{2}}"),
    EX_NEW_1(TextColors.GREEN, "cm new {{2}} {{6}}"),
    EX_NEW_2(TextColors.GREEN, "cm new {{2}} {{6}}"),
    EX_NEW_3(TextColors.GREEN, "cm new {{2}} {{6}} {{6}}"),
    EX_NEW_4(TextColors.GREEN, "cm new {{2}} {{6}} {{6}} {{6}}"),
    EX_PER_WORLD_0(TextColors.GREEN, "cm perworld {{6}} {{6}}"),
    EX_PER_WORLD_1(TextColors.GREEN, "cm perworld {{6}} {{6}}"),
    EX_PER_WORLD_2(TextColors.GREEN, "cm perworld {{6}} {{6}} {{6}}"),
    EX_PER_WORLD_3(TextColors.GREEN, "cm perworld {{6}}"),
    EX_PER_WORLD_4(TextColors.GREEN, "cm perworld {{6}} {{6}}"),
    EX_POSITION_0(TextColors.GREEN, "cm position"),
    EX_POSITION_1(TextColors.GREEN, "cm position {{6}} {{6}}"),
    EX_POSITION_2(TextColors.GREEN, "cm position {{6}}"),
    EX_PROPERTIES_ALLOW_COMMAND_BLOCKS_0(TextColors.GREEN, "cm properties {{2}} allowcommandblocks {{6}}"),
    EX_PROPERTIES_ALLOW_COMMAND_BLOCKS_1(TextColors.GREEN, "cm properties allowcommandblocks {{6}}"),
    EX_PROPERTIES_ALLOW_COMMAND_BLOCKS_2(TextColors.GREEN, "cm properties {{2}} allowcommandblocks"),
    EX_PROPERTIES_ALLOW_COMMAND_BLOCKS_3(TextColors.GREEN, "cm properties allowcommandblocks"),
    EX_PROPERTIES_DIFFICULTY_0(TextColors.GREEN, "cm properties {{2}} difficulty {{6}}"),
    EX_PROPERTIES_DIFFICULTY_1(TextColors.GREEN, "cm properties difficulty {{6}}"),
    EX_PROPERTIES_DIFFICULTY_2(TextColors.GREEN, "cm properties {{2}} difficulty"),
    EX_PROPERTIES_DIFFICULTY_3(TextColors.GREEN, "cm properties difficulty"),
    EX_PROPERTIES_GAME_MODE_0(TextColors.GREEN, "cm properties {{2}} gamemode {{6}}"),
    EX_PROPERTIES_GAME_MODE_1(TextColors.GREEN, "cm properties gamemode {{6}}"),
    EX_PROPERTIES_GAME_MODE_2(TextColors.GREEN, "cm properties {{2}} gamemode"),
    EX_PROPERTIES_GAME_MODE_3(TextColors.GREEN, "cm properties gamemode"),
    EX_PROPERTIES_GENERATE_SPAWN_ON_LOAD_0(TextColors.GREEN, "cm properties {{2}} generatespawnonload {{6}}"),
    EX_PROPERTIES_GENERATE_SPAWN_ON_LOAD_1(TextColors.GREEN, "cm properties generatespawnonload {{6}}"),
    EX_PROPERTIES_GENERATE_SPAWN_ON_LOAD_2(TextColors.GREEN, "cm properties {{2}} generatespawnonload"),
    EX_PROPERTIES_GENERATE_SPAWN_ON_LOAD_3(TextColors.GREEN, "cm properties generatespawnonload"),
    EX_PROPERTIES_GENERATOR_TYPE_0(TextColors.GREEN, "cm properties {{2}} generatortypes {{6}}"),
    EX_PROPERTIES_GENERATOR_TYPE_1(TextColors.GREEN, "cm properties generatortypes {{6}}"),
    EX_PROPERTIES_GENERATOR_TYPE_2(TextColors.GREEN, "cm properties {{2}} generatortypes"),
    EX_PROPERTIES_GENERATOR_TYPE_3(TextColors.GREEN, "cm properties generatortypes"),
    EX_PROPERTIES_HARDCORE_0(TextColors.GREEN, "cm properties {{2}} hardcore {{6}}"),
    EX_PROPERTIES_HARDCORE_1(TextColors.GREEN, "cm properties hardcore {{6}}"),
    EX_PROPERTIES_HARDCORE_2(TextColors.GREEN, "cm properties {{2}} hardcore"),
    EX_PROPERTIES_HARDCORE_3(TextColors.GREEN, "cm properties hardcore"),
    EX_PROPERTIES_KEEP_SPAWN_LOADED_0(TextColors.GREEN, "cm properties {{2}} keepspawnloaded {{6}}"),
    EX_PROPERTIES_KEEP_SPAWN_LOADED_1(TextColors.GREEN, "cm properties keepspawnloaded {{6}}"),
    EX_PROPERTIES_KEEP_SPAWN_LOADED_2(TextColors.GREEN, "cm properties {{2}} keepspawnloaded"),
    EX_PROPERTIES_KEEP_SPAWN_LOADED_3(TextColors.GREEN, "cm properties keepspawnloaded"),
    EX_PROPERTIES_LOAD_ON_STARTUP_0(TextColors.GREEN, "cm properties {{2}} loadonstartup {{6}}"),
    EX_PROPERTIES_LOAD_ON_STARTUP_1(TextColors.GREEN, "cm properties loadonstartup {{6}}"),
    EX_PROPERTIES_LOAD_ON_STARTUP_2(TextColors.GREEN, "cm properties {{2}} loadonstartup"),
    EX_PROPERTIES_LOAD_ON_STARTUP_3(TextColors.GREEN, "cm properties loadonstartup"),
    EX_PROPERTIES_PVP_0(TextColors.GREEN, "cm properties {{2}} pvp {{6}}"),
    EX_PROPERTIES_PVP_1(TextColors.GREEN, "cm properties pvp {{6}}"),
    EX_PROPERTIES_PVP_2(TextColors.GREEN, "cm properties {{2}} pvp"),
    EX_PROPERTIES_PVP_3(TextColors.GREEN, "cm properties pvp"),
    EX_PROPERTIES_RULES_0(TextColors.GREEN, "cm properties {{2}} rules {{6}} {{6}}"),
    EX_PROPERTIES_RULES_1(TextColors.GREEN, "cm properties rules {{6}} {{6}}"),
    EX_PROPERTIES_RULES_2(TextColors.GREEN, "cm properties {{2}} rules {{6}}"),
    EX_PROPERTIES_RULES_3(TextColors.GREEN, "cm properties rules {{6}}"),
    EX_PROPERTIES_SPAWN_POSITION_0(TextColors.GREEN, "cm properties {{2}} spawnposition {{6}}"),
    EX_PROPERTIES_SPAWN_POSITION_1(TextColors.GREEN, "cm properties spawnposition {{6}}"),
    EX_PROPERTIES_SPAWN_POSITION_2(TextColors.GREEN, "cm properties {{2}} spawnposition"),
    EX_PROPERTIES_SPAWN_POSITION_3(TextColors.GREEN, "cm properties spawnposition"),
    EX_RENAME_0(TextColors.GREEN, "cm rename {{2}} {{2}}"),
    EX_SCOREBOARD_OBJECTIVES_ADD_0(TextColors.GREEN, "cm scoreboard {{2}} objectives add {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_ADD_1(TextColors.GREEN, "cm scoreboard objectives add {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_ADD_2(TextColors.GREEN, "cm scoreboard {{2}} objectives add {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_ADD_3(TextColors.GREEN, "cm scoreboard objectives add {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_LIST_0(TextColors.GREEN, "cm scoreboard {{2}} objectives list"),
    EX_SCOREBOARD_OBJECTIVES_LIST_1(TextColors.GREEN, "cm scoreboard objectives list"),
    EX_SCOREBOARD_OBJECTIVES_MODIFY_0(TextColors.GREEN, "cm scoreboard {{2}} objectives modify {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_MODIFY_1(TextColors.GREEN, "cm scoreboard objectives modify {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_MODIFY_2(TextColors.GREEN, "cm scoreboard objectives modify {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_REMOVE_0(TextColors.GREEN, "cm scoreboard {{2}} objectives remove {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_REMOVE_1(TextColors.GREEN, "cm scoreboard objectives remove {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_SET_DISPLAY_0(TextColors.GREEN, "cm scoreboard {{2}} objectives setdisplay {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_SET_DISPLAY_1(TextColors.GREEN, "cm scoreboard objectives setdisplay {{6}} {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_SET_DISPLAY_2(TextColors.GREEN, "cm scoreboard {{2}} objectives setdisplay {{6}}"),
    EX_SCOREBOARD_OBJECTIVES_SET_DISPLAY_3(TextColors.GREEN, "cm scoreboard objectives setdisplay {{6}}"),
    EX_SCOREBOARD_PLAYERS_ADD_0(TextColors.GREEN, "cm scoreboard players add {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_ADD_1(TextColors.GREEN, "cm scoreboard players add {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_ADD_2(TextColors.GREEN, "cm scoreboard {{2}} players add {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_ADD_3(TextColors.GREEN, "cm scoreboard players add {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_ADD_4(TextColors.GREEN, "cm scoreboard players add {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_GET_0(TextColors.GREEN, "cm scoreboard {{2}} players get {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_GET_1(TextColors.GREEN, "cm scoreboard players get {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_GET_2(TextColors.GREEN, "cm scoreboard players get {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_GET_3(TextColors.GREEN, "cm scoreboard {{2}} players get {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_GET_4(TextColors.GREEN, "cm scoreboard players get {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_LIST_0(TextColors.GREEN, "cm scoreboard {{2}} players list {{6}}"),
    EX_SCOREBOARD_PLAYERS_LIST_1(TextColors.GREEN, "cm scoreboard players list"),
    EX_SCOREBOARD_PLAYERS_LIST_2(TextColors.GREEN, "cm scoreboard players list {{6}}"),
    EX_SCOREBOARD_PLAYERS_LIST_3(TextColors.GREEN, "cm scoreboard {{2}} players list {{6}}"),
    EX_SCOREBOARD_PLAYERS_LIST_4(TextColors.GREEN, "cm scoreboard players list {{6}}"),
    EX_SCOREBOARD_PLAYERS_LIST_5(TextColors.GREEN, "cm scoreboard players list {{6}}"),
    EX_SCOREBOARD_PLAYERS_OPERATION_0(TextColors.GREEN, "cm scoreboard {{2}} players operation {{6}} {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_OPERATION_1(TextColors.GREEN, "cm scoreboard players operation {{6}} {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_OPERATION_2(TextColors.GREEN, "cm scoreboard players operation {{6}} {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_OPERATION_3(TextColors.GREEN, "cm scoreboard {{2}} players operation {{6}} {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RANDOM_0(TextColors.GREEN, "cm scoreboard {{2}} players random {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RANDOM_1(TextColors.GREEN, "cm scoreboard players random {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RANDOM_2(TextColors.GREEN, "cm scoreboard players random {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RANDOM_3(TextColors.GREEN, "cm scoreboard {{2}} players random {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RANDOM_4(TextColors.GREEN, "cm scoreboard players random {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_REMOVE_0(TextColors.GREEN, "cm scoreboard players remove {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_REMOVE_1(TextColors.GREEN, "cm scoreboard players remove {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_REMOVE_2(TextColors.GREEN, "cm scoreboard {{2}} players remove {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_REMOVE_3(TextColors.GREEN, "cm scoreboard players remove {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_REMOVE_4(TextColors.GREEN, "cm scoreboard players remove {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RESET_0(TextColors.GREEN, "cm scoreboard {{2}} players reset {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RESET_1(TextColors.GREEN, "cm scoreboard players reset {{6}}"),
    EX_SCOREBOARD_PLAYERS_RESET_2(TextColors.GREEN, "cm scoreboard {{2}} players reset {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RESET_3(TextColors.GREEN, "cm scoreboard players reset {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_RESET_4(TextColors.GREEN, "cm scoreboard {{2}} players reset {{6}}"),
    EX_SCOREBOARD_PLAYERS_SET_0(TextColors.GREEN, "cm scoreboard {{2}} players set {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_SET_1(TextColors.GREEN, "cm scoreboard players set {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_SET_2(TextColors.GREEN, "cm scoreboard players set {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_SET_3(TextColors.GREEN, "cm scoreboard {{2}} players set {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_SET_4(TextColors.GREEN, "cm scoreboard players set {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_TEST_0(TextColors.GREEN, "cm scoreboard {{2}} players test {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_TEST_1(TextColors.GREEN, "cm scoreboard players test {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_TEST_2(TextColors.GREEN, "cm scoreboard players test {{6}} {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_TEST_3(TextColors.GREEN, "cm scoreboard {{2}} players test {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_PLAYERS_TEST_4(TextColors.GREEN, "cm scoreboard players test {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_ADD_0(TextColors.GREEN, "cm scoreboard {{2}} teams add {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_ADD_1(TextColors.GREEN, "cm scoreboard teams add {{6}}"),
    EX_SCOREBOARD_TEAMS_ADD_2(TextColors.GREEN, "cm scoreboard {{2}} teams add {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_ADD_3(TextColors.GREEN, "cm scoreboard teams add {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_EMPTY_0(TextColors.GREEN, "cm scoreboard {{2}} teams empty {{6}}"),
    EX_SCOREBOARD_TEAMS_EMPTY_1(TextColors.GREEN, "cm scoreboard teams empty {{6}}"),
    EX_SCOREBOARD_TEAMS_JOIN_0(TextColors.GREEN, "cm scoreboard {{2}} teams join {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_JOIN_1(TextColors.GREEN, "cm scoreboard teams join {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_JOIN_2(TextColors.GREEN, "cm scoreboard teams join {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_JOIN_3(TextColors.GREEN, "cm scoreboard {{2}} teams join {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_JOIN_4(TextColors.GREEN, "cm scoreboard teams join {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_LEAVE_0(TextColors.GREEN, "cm scoreboard {{2}} teams leave {{6}}"),
    EX_SCOREBOARD_TEAMS_LEAVE_1(TextColors.GREEN, "cm scoreboard teams leave {{6}}"),
    EX_SCOREBOARD_TEAMS_LEAVE_2(TextColors.GREEN, "cm scoreboard teams leave {{6}}"),
    EX_SCOREBOARD_TEAMS_LEAVE_3(TextColors.GREEN, "cm scoreboard {{2}} teams leave {{6}}"),
    EX_SCOREBOARD_TEAMS_LEAVE_4(TextColors.GREEN, "cm scoreboard teams leave {{6}}"),
    EX_SCOREBOARD_TEAMS_LIST_0(TextColors.GREEN, "cm scoreboard {{2}} teams list"),
    EX_SCOREBOARD_TEAMS_LIST_1(TextColors.GREEN, "cm scoreboard teams list {{6}}"),
    EX_SCOREBOARD_TEAMS_OPTION_0(TextColors.GREEN, "cm scoreboard {{2}} teams option {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_OPTION_1(TextColors.GREEN, "cm scoreboard teams option {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_OPTION_2(TextColors.GREEN, "cm scoreboard teams option {{6}} {{6}} {{6}}"),
    EX_SCOREBOARD_TEAMS_REMOVE_0(TextColors.GREEN, "cm scoreboard {{2}} teams remove {{6}}"),
    EX_SCOREBOARD_TEAMS_REMOVE_1(TextColors.GREEN, "cm scoreboard teams remove {{6}}"),
    EX_TIME_CALENDAR_0(TextColors.GREEN, "cm time {{2}} calendar"),
    EX_TIME_CALENDAR_1(TextColors.GREEN, "cm time calendar"),
    EX_TIME_DAWN_0(TextColors.GREEN, "cm time {{2}} dawn"),
    EX_TIME_DAWN_1(TextColors.GREEN, "cm time dawn"),
    EX_TIME_DUSK_0(TextColors.GREEN, "cm time {{2}} dusk"),
    EX_TIME_DUSK_1(TextColors.GREEN, "cm time dusk"),
    EX_TIME_IGNORE_PLAYERS_SLEEPING_0(TextColors.GREEN, "cm time {{2}} ignoreplayerssleeping {{6}}"),
    EX_TIME_IGNORE_PLAYERS_SLEEPING_1(TextColors.GREEN, "cm time ignoreplayerssleeping"),
    EX_TIME_IGNORE_PLAYERS_SLEEPING_2(TextColors.GREEN, "cm time ignoreplayerssleeping {{6}} {{6}}"),
    EX_TIME_IGNORE_PLAYERS_SLEEPING_3(TextColors.GREEN, "cm time {{2}} ignoreplayerssleeping {{6}}"),
    EX_TIME_MIDDAY_0(TextColors.GREEN, "cm time {{2}} midday"),
    EX_TIME_MIDDAY_1(TextColors.GREEN, "cm time midday"),
    EX_TIME_MIDNIGHT_0(TextColors.GREEN, "cm time {{2}} midnight"),
    EX_TIME_MIDNIGHT_1(TextColors.GREEN, "cm time midnight"),
    EX_TIME_SET_0(TextColors.GREEN, "cm time {{2}} set {{6}}"),
    EX_TIME_SET_1(TextColors.GREEN, "cm time set {{6}}"),
    EX_TIME_REAL_TIME_0(TextColors.GREEN, "cm time {{2}} realtime {{6}}"),
    EX_TIME_REAL_TIME_1(TextColors.GREEN, "cm time realtime"),
    EX_TIME_REAL_TIME_2(TextColors.GREEN, "cm time realtime {{6}} {{6}}"),
    EX_TIME_REAL_TIME_3(TextColors.GREEN, "cm time {{2}} realtime {{6}}"),
    EX_TIME_TOMORROW_0(TextColors.GREEN, "cm time {{2}} tomorrow"),
    EX_TIME_TOMORROW_1(TextColors.GREEN, "cm time tomorrow"),
    EX_UNLOAD_0(TextColors.GREEN, "cm unload {{2}}"),
    EX_VIEW_DISTANCE_0(TextColors.GREEN, "cm viewdistance {{2}} {{6}}"),
    EX_VIEW_DISTANCE_1(TextColors.GREEN, "cm viewdistance {{6}}"),
    EX_VIEW_DISTANCE_2(TextColors.GREEN, "cm viewdistance {{2}}"),
    EX_VIEW_DISTANCE_3(TextColors.GREEN, "cm viewdistance"),
    EX_WEATHER_FORECAST_0(TextColors.GREEN, "cm weather {{2}} forecast"),
    EX_WEATHER_FORECAST_1(TextColors.GREEN, "cm weather forecast"),
    EX_WEATHER_RAIN_0(TextColors.GREEN, "cm weather {{2}} rain {{6}}"),
    EX_WEATHER_RAIN_1(TextColors.GREEN, "cm weather rain"),
    EX_WEATHER_SUN_0(TextColors.GREEN, "cm weather {{2}} sun {{6}}"),
    EX_WEATHER_SUN_1(TextColors.GREEN, "cm weather sun"),
    EX_WEATHER_THUNDER_0(TextColors.GREEN, "cm weather {{2}} thunder {{6}}"),
    EX_WEATHER_THUNDER_1(TextColors.GREEN, "cm weather thunder"),

    // Descriptions
    DESC_BACKUP_DELETE_0(TextColors.GREEN, "Delete {{6}} backup created on Nov 30th 2020"),
    DESC_BACKUP_LIST_0(TextColors.GREEN, "List all existing backups"),
    DESC_BACKUP_LIST_1(TextColors.GREEN, "List all backups of {{2}}"),
    DESC_BACKUP_RESET_0(TextColors.GREEN, "Reset {{6}} backup. The linked world will be unloaded, restored from this backup, and then loaded again"),
    DESC_BACKUP_RESTORE_0(TextColors.GREEN, "Restore {{6}} backup. The linked world must be unloaded beforehand"),
    DESC_BACKUP_SAVE_0(TextColors.GREEN, "Save a backup of {{2}}. You'll be able to restore this backup afterwards"),
    DESC_BACKUP_TAG_0(TextColors.GREEN, "Tag backup {{6}} with {{6}}. It will now be displayed as {{6}}"),
    DESC_BORDER_CENTER_0(TextColors.GREEN, "Center border of {{2}} at {{6}}"),
    DESC_BORDER_CENTER_1(TextColors.GREEN, "Center border of current world at {{6}}"),
    DESC_BORDER_CENTER_2(TextColors.GREEN, "Center border of current world at command-source's position"),
    DESC_BORDER_CENTER_3(TextColors.GREEN, "Show border center of {{2}}"),
    DESC_BORDER_CENTER_4(TextColors.GREEN, "Show border center of current world"),
    DESC_BORDER_DAMAGE_AMOUNT_0(TextColors.GREEN, "Set border damage amount of {{2}} to {{6}} damage per tick"),
    DESC_BORDER_DAMAGE_AMOUNT_1(TextColors.GREEN, "Set border damage amount of current world to {{6}} damage per tick"),
    DESC_BORDER_DAMAGE_AMOUNT_2(TextColors.GREEN, "Show border damage amount of {{2}}"),
    DESC_BORDER_DAMAGE_AMOUNT_3(TextColors.GREEN, "Show border damage amount of current world"),
    DESC_BORDER_DAMAGE_THRESHOLD_0(TextColors.GREEN, "Set border damage threshold of {{2}} to {{6}} blocks"),
    DESC_BORDER_DAMAGE_THRESHOLD_1(TextColors.GREEN, "Set border damage threshold of current world to {{6}} blocks"),
    DESC_BORDER_DAMAGE_THRESHOLD_2(TextColors.GREEN, "Show border damage threshold of {{2}}"),
    DESC_BORDER_DAMAGE_THRESHOLD_3(TextColors.GREEN, "Show border damage threshold of current world"),
    DESC_BORDER_INFORMATION_0(TextColors.GREEN, "Show border information of {{2}}, including center position, diameter, movement, damage and warning"),
    DESC_BORDER_INFORMATION_1(TextColors.GREEN, "Show border information of current world"),
    DESC_BORDER_OPERATE_0(TextColors.GREEN, "Add ({{6}}) {{6}} blocks to border diameter of {{2}} in {{6}} milliseconds"),
    DESC_BORDER_OPERATE_1(TextColors.GREEN, "Subtract ({{6}}) {{6}} blocks to border diameter of current world immediately"),
    DESC_BORDER_OPERATE_2(TextColors.GREEN, "Multiply ({{6}}) border diameter of {{2}} by {{6}} immediately"),
    DESC_BORDER_OPERATE_3(TextColors.GREEN, "Divide ({{6}}) border diameter of current world by {{6}} in {{6}} milliseconds"),
    DESC_BORDER_REMOVE_0(TextColors.GREEN, "Remove world border of {{2}}"),
    DESC_BORDER_REMOVE_1(TextColors.GREEN, "Remove world border of current world"),
    DESC_BORDER_SIZE_0(TextColors.GREEN, "Set border diameter of {{2}} to {{6}} blocks"),
    DESC_BORDER_SIZE_1(TextColors.GREEN, "Set border diameter of current world to {{6}} blocks"),
    DESC_BORDER_SIZE_2(TextColors.GREEN, "Show border diameter of {{2}}"),
    DESC_BORDER_SIZE_3(TextColors.GREEN, "Show border diameter of current world"),
    DESC_BORDER_TRANSPOSE_0(TextColors.GREEN, "Modify border diameter of {{2}} from {{6}} to {{6}} blocks in {{6}} milliseconds"),
    DESC_BORDER_TRANSPOSE_1(TextColors.GREEN, "Modify border diameter of {{2}} from its current value to {{6}} blocks in {{6}} milliseconds"),
    DESC_BORDER_TRANSPOSE_2(TextColors.GREEN, "Modify border diameter of current world from {{6}} to {{6}} blocks in {{6}} milliseconds"),
    DESC_BORDER_TRANSPOSE_3(TextColors.GREEN, "Modify border diameter of current world from its current value to {{6}} blocks in {{6}} milliseconds"),
    DESC_BORDER_WARNING_DISTANCE_0(TextColors.GREEN, "Set border warning distance of {{2}} to {{6}} blocks"),
    DESC_BORDER_WARNING_DISTANCE_1(TextColors.GREEN, "Set border warning distance of current world to {{6}} blocks"),
    DESC_BORDER_WARNING_DISTANCE_2(TextColors.GREEN, "Show border warning distance of {{2}}"),
    DESC_BORDER_WARNING_DISTANCE_3(TextColors.GREEN, "Show border warning distance of current world"),
    DESC_BORDER_WARNING_TIME_0(TextColors.GREEN, "Set border warning time of {{2}} to {{6}} seconds"),
    DESC_BORDER_WARNING_TIME_1(TextColors.GREEN, "Set border warning time of current world to {{6}} seconds"),
    DESC_BORDER_WARNING_TIME_2(TextColors.GREEN, "Show border warning time of {{2}}"),
    DESC_BORDER_WARNING_TIME_3(TextColors.GREEN, "Show border warning time of current world"),
    DESC_DELETE_0(TextColors.GREEN, "Delete {{2}} from the server, including world folder and cosmos per world files"),
    DESC_DISABLE_0(TextColors.GREEN, "Disable {{2}} on the server, which means it will not be loaded on server restart"),
    DESC_DUPLICATE_0(TextColors.GREEN, "Create a duplicate of {{2}} with new name {{6}}"),
    DESC_ENABLE_0(TextColors.GREEN, "Enable {{2}} on the server, it will now be available for loading"),
    DESC_HELP_0(TextColors.GREEN, "Show helps for all Cosmos commands"),
    DESC_HELP_1(TextColors.GREEN, "Show help for {{6}} command"),
    DESC_IMPORT_0(TextColors.GREEN, "Import external=exported world {{2}} on the server, it will now be available for loading"),
    DESC_INFORMATION_0(TextColors.GREEN, "Show information about {{2}} depending on its state"),
    DESC_LIST_0(TextColors.GREEN, "Show the list of all worlds including loaded, unloaded, disabled or exported worlds"),
    DESC_LIST_1(TextColors.GREEN, "Show the list of {{6}} worlds including loaded, unloaded, disabled or exported worlds"),
    DESC_LOAD_0(TextColors.GREEN, "Load {{2}} on the server, players will be able to join this world"),
    DESC_MOVE_0(TextColors.GREEN, "Move {{r}} to {{2}} at {{6}} and looking at {{6}}"),
    DESC_MOVE_1(TextColors.GREEN, "Move yourself to spawn position of current world"),
    DESC_MOVE_2(TextColors.GREEN, "Move all entities targeted ({{6}}) to spawn position of current world"),
    DESC_MOVE_3(TextColors.GREEN, "Move yourself to {{2}} at {{6}}"),
    DESC_MOVE_4(TextColors.GREEN, "Move {{r}} to spawn position of {{2}} in a safe way. It means that {{r}} can't be teleported inside a block"),
    DESC_MOVE_TO_0(TextColors.GREEN, "Move {{r}} to the position of {{r}}"),
    DESC_MOVE_TO_1(TextColors.GREEN, "Move yourself to the position of {{r}}"),
    DESC_MOVE_TO_2(TextColors.GREEN, "Move all entities targeted ({{6}}) to the position of {{r}}"),
    DESC_MOVE_TO_3(TextColors.GREEN, "Move {{r}} to the position of {{r}} in a safe way. It means that {{r}} can't be teleported inside a block"),
    DESC_NEW_0(TextColors.GREEN, "Create a world named {{2}} with overworld generation settings"),
    DESC_NEW_1(TextColors.GREEN, "Create a world named {{2}} with {{6}} generation settings"),
    DESC_NEW_2(TextColors.GREEN, "Create a world named {{2}} with {{6}} generation settings"),
    DESC_NEW_3(TextColors.GREEN, "Create a world named {{2}} with {{6}} generation settings in {{6}} dimension"),
    DESC_NEW_4(TextColors.GREEN, "Create a world named {{2}} with {{6}} generation settings overridden by {{6}} world modifiers in {{6}} dimension"),
    DESC_PER_WORLD_0(TextColors.GREEN, "Set per world {{6}} state to {{6}} (activated)"),
    DESC_PER_WORLD_1(TextColors.GREEN, "Set per world {{6}} state to {{6}} (disabled)"),
    DESC_PER_WORLD_2(TextColors.GREEN, "Set per world {{6}} state to {{6}} (activated), and save it in config"),
    DESC_PER_WORLD_3(TextColors.GREEN, "Show current state of per world {{6}}, activated or disabled"),
    DESC_PER_WORLD_4(TextColors.GREEN, "Show current state of per world {{6}}, activated or disabled, and save it in config"),
    DESC_POSITION_0(TextColors.GREEN, "Show your current position"),
    DESC_POSITION_1(TextColors.GREEN, "Send the current positions of all players targeted ({{6}}) to {{r}}"),
    DESC_POSITION_2(TextColors.GREEN, "Show the current position of all players targeted ({{6}})"),
    DESC_PROPERTIES_ALLOW_COMMAND_BLOCKS_0(TextColors.GREEN, "Allow command blocks on {{2}} by setting property to {{6}}"),
    DESC_PROPERTIES_ALLOW_COMMAND_BLOCKS_1(TextColors.GREEN, "Disable command blocks on current world by setting property to {{6}}"),
    DESC_PROPERTIES_ALLOW_COMMAND_BLOCKS_2(TextColors.GREEN, "Show command blocks allowance value of {{2}}"),
    DESC_PROPERTIES_ALLOW_COMMAND_BLOCKS_3(TextColors.GREEN, "Show command blocks allowance value of current world"),
    DESC_PROPERTIES_DIFFICULTY_0(TextColors.GREEN, "Set difficulty level of {{2}} to {{6}}"),
    DESC_PROPERTIES_DIFFICULTY_1(TextColors.GREEN, "Set difficulty level of current world to {{6}}"),
    DESC_PROPERTIES_DIFFICULTY_2(TextColors.GREEN, "Show difficulty level of {{2}}"),
    DESC_PROPERTIES_DIFFICULTY_3(TextColors.GREEN, "Show difficulty level of current world"),
    DESC_PROPERTIES_GAME_MODE_0(TextColors.GREEN, "Set game mode of {{2}} to {{6}}"),
    DESC_PROPERTIES_GAME_MODE_1(TextColors.GREEN, "Set game mode of current world to {{6}}"),
    DESC_PROPERTIES_GAME_MODE_2(TextColors.GREEN, "Show game mode of {{2}}"),
    DESC_PROPERTIES_GAME_MODE_3(TextColors.GREEN, "Show game mode of current world"),
    DESC_PROPERTIES_GENERATE_SPAWN_ON_LOAD_0(TextColors.GREEN, "Set spawn generation on load of {{2}} to {{6}}"),
    DESC_PROPERTIES_GENERATE_SPAWN_ON_LOAD_1(TextColors.GREEN, "Set spawn generation on load of current world to {{6}}"),
    DESC_PROPERTIES_GENERATE_SPAWN_ON_LOAD_2(TextColors.GREEN, "Show spawn generation on load of {{2}}"),
    DESC_PROPERTIES_GENERATE_SPAWN_ON_LOAD_3(TextColors.GREEN, "Show spawn generation on load of current world"),
    DESC_PROPERTIES_GENERATOR_TYPE_0(TextColors.GREEN, "Set generator type of {{2}} to {{6}}"),
    DESC_PROPERTIES_GENERATOR_TYPE_1(TextColors.GREEN, "Set generator type of current world to {{6}}"),
    DESC_PROPERTIES_GENERATOR_TYPE_2(TextColors.GREEN, "Show generator type of {{2}}"),
    DESC_PROPERTIES_GENERATOR_TYPE_3(TextColors.GREEN, "Show generator type of current world"),
    DESC_PROPERTIES_HARDCORE_0(TextColors.GREEN, "Set hardcore mode of {{2}} to {{6}}"),
    DESC_PROPERTIES_HARDCORE_1(TextColors.GREEN, "Set hardcore mode of current world to {{6}}"),
    DESC_PROPERTIES_HARDCORE_2(TextColors.GREEN, "Show hardcore mode of {{2}}"),
    DESC_PROPERTIES_HARDCORE_3(TextColors.GREEN, "Show hardcore mode of current world"),
    DESC_PROPERTIES_KEEP_SPAWN_LOADED_0(TextColors.GREEN, "Set spawn loading of {{2}} to {{6}}"),
    DESC_PROPERTIES_KEEP_SPAWN_LOADED_1(TextColors.GREEN, "Set spawn loading of current world to {{6}}"),
    DESC_PROPERTIES_KEEP_SPAWN_LOADED_2(TextColors.GREEN, "Show spawn loading of {{2}}"),
    DESC_PROPERTIES_KEEP_SPAWN_LOADED_3(TextColors.GREEN, "Show spawn loading of current world"),
    DESC_PROPERTIES_LOAD_ON_STARTUP_0(TextColors.GREEN, "Set startup loading of {{2}} to {{6}}"),
    DESC_PROPERTIES_LOAD_ON_STARTUP_1(TextColors.GREEN, "Set startup loading of current world to {{6}}"),
    DESC_PROPERTIES_LOAD_ON_STARTUP_2(TextColors.GREEN, "Show startup loading of {{2}}"),
    DESC_PROPERTIES_LOAD_ON_STARTUP_3(TextColors.GREEN, "Show startup loading of current world"),
    DESC_PROPERTIES_PVP_0(TextColors.GREEN, "Set player versus player of {{2}} to {{6}}"),
    DESC_PROPERTIES_PVP_1(TextColors.GREEN, "Set player versus player of current world to {{6}}"),
    DESC_PROPERTIES_PVP_2(TextColors.GREEN, "Show player versus player of {{2}}"),
    DESC_PROPERTIES_PVP_3(TextColors.GREEN, "Show player versus player of current world"),
    DESC_PROPERTIES_RULES_0(TextColors.GREEN, "Set game rule {{6}} of {{2}} to {{6}}"),
    DESC_PROPERTIES_RULES_1(TextColors.GREEN, "Set game rule {{6}} of current world to {{6}}"),
    DESC_PROPERTIES_RULES_2(TextColors.GREEN, "Show game rule {{6}} of {{2}}"),
    DESC_PROPERTIES_RULES_3(TextColors.GREEN, "Show game rule {{6}} of current world"),
    DESC_PROPERTIES_SPAWN_POSITION_0(TextColors.GREEN, "Set spawn position of {{2}} at {{6}}"),
    DESC_PROPERTIES_SPAWN_POSITION_1(TextColors.GREEN, "Set spawn position of current world at {{6}}"),
    DESC_PROPERTIES_SPAWN_POSITION_2(TextColors.GREEN, "Show spawn position of {{2}}"),
    DESC_PROPERTIES_SPAWN_POSITION_3(TextColors.GREEN, "Show spawn position of current world"),
    DESC_RENAME_0(TextColors.GREEN, "Rename {{2}} in {{2}}"),
    DESC_SCOREBOARD_OBJECTIVES_ADD_0(TextColors.GREEN, "Create an objective named {{6}} on {{2}}'s scoreboard with {{6}} criterion"),
    DESC_SCOREBOARD_OBJECTIVES_ADD_1(TextColors.GREEN, "Create an objective named {{6}} on current world scoreboard with {{6}} criterion"),
    DESC_SCOREBOARD_OBJECTIVES_ADD_2(TextColors.GREEN, "Create an objective named {{6}} on {{2}}'s scoreboard with {{6}} criterion and displayed as {{r}}"),
    DESC_SCOREBOARD_OBJECTIVES_ADD_3(TextColors.GREEN, "Create an objective named {{6}} on current world scoreboard with {{6}} criterion and displayed as {{r}}"),
    DESC_SCOREBOARD_OBJECTIVES_LIST_0(TextColors.GREEN, "Show all objectives registered for {{2}}"),
    DESC_SCOREBOARD_OBJECTIVES_LIST_1(TextColors.GREEN, "Show all objectives registered for current world"),
    DESC_SCOREBOARD_OBJECTIVES_MODIFY_0(TextColors.GREEN, "Modify {{6}} of objective {{6}} registered on {{2}}, which will be displayed with {{6}}"),
    DESC_SCOREBOARD_OBJECTIVES_MODIFY_1(TextColors.GREEN, "Modify {{6}} of objective {{6}} registered on current world, which will be displayed as {{6}}"),
    DESC_SCOREBOARD_OBJECTIVES_MODIFY_2(TextColors.GREEN, "Modify {{6}} of objective {{6}} registered on current world, which will be displayed as {{6}}"),
    DESC_SCOREBOARD_OBJECTIVES_REMOVE_0(TextColors.GREEN, "Remove objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_OBJECTIVES_REMOVE_1(TextColors.GREEN, "Remove objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_OBJECTIVES_SET_DISPLAY_0(TextColors.GREEN, "Show objective {{6}} on display slot {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_OBJECTIVES_SET_DISPLAY_1(TextColors.GREEN, "Show objective {{6}} on display slot {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_OBJECTIVES_SET_DISPLAY_2(TextColors.GREEN, "Clear display slot {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_OBJECTIVES_SET_DISPLAY_3(TextColors.GREEN, "Clear display slot {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_ADD_0(TextColors.GREEN, "Add {{6}} to {{r}} score on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_ADD_1(TextColors.GREEN, "Add {{6}} on objective {{6}} to all entities registered ({{6}}) from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_ADD_2(TextColors.GREEN, "Add {{6}} on objective {{6}} to all entities targeted ({{6}}) from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_ADD_3(TextColors.GREEN, "Add {{6}} to {{r}} score on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_ADD_4(TextColors.GREEN, "Add {{6}} to {{r}} score on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_GET_0(TextColors.GREEN, "Get score of {{r}} on objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_GET_1(TextColors.GREEN, "Get scores of all entities registered ({{6}}) on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_GET_2(TextColors.GREEN, "Get scores of all entities targeted ({{6}}) on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_GET_3(TextColors.GREEN, "Get score of {{r}} on objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_GET_4(TextColors.GREEN, "Get score of {{r}} on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_LIST_0(TextColors.GREEN, "Show scores of {{r}} on every objectives from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_LIST_1(TextColors.GREEN, "Show names of all entities registered from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_LIST_2(TextColors.GREEN, "Show scores of all entities registered ({{6}}) on every objectives from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_LIST_3(TextColors.GREEN, "Show scores of all entities targeted ({{6}}) on every objectives from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_LIST_4(TextColors.GREEN, "Show scores of {{r}} on every objectives from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_LIST_5(TextColors.GREEN, "Show scores of {{r}} on every objectives from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_OPERATION_0(TextColors.GREEN, "Add ({{6}}) score of {{r}} on source objective {{6}} to {{r}}'s score on objective {{6}}, from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_OPERATION_1(TextColors.GREEN, "Multiply ({{6}}) scores of all entities registered ({{6}}) on objective {{6}}, with score of {{r}} on source objective {{6}}, from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_OPERATION_2(TextColors.GREEN, "Assign ({{6}}) score of {{r}} on source objective {{6}} to scores of all entities targeted ({{6}}) on objective {{6}}, from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_OPERATION_3(TextColors.GREEN, "Swap ({{6}}) score of {{r}} on objective {{6}} with {{r}}'s score on source objective {{6}}, from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_RANDOM_0(TextColors.GREEN, "Set random value between {{6}} and {{6}} to {{r}} on objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_RANDOM_1(TextColors.GREEN, "Set random value between {{6}} and {{6}} to all entities registered ({{6}}) on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_RANDOM_2(TextColors.GREEN, "Set random value between {{6}} and {{6}} to all entities targeted ({{6}}) on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_RANDOM_3(TextColors.GREEN, "Set random value between {{6}} and {{6}} to {{r}} on objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_RANDOM_4(TextColors.GREEN, "Set random value between {{6}} and {{6}} to {{r}} on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_REMOVE_0(TextColors.GREEN, "Remove {{6}} to {{r}} score on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_REMOVE_1(TextColors.GREEN, "Remove {{6}} on objective {{6}} to all entities registered ({{6}}) from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_REMOVE_2(TextColors.GREEN, "Remove {{6}} on objective {{6}} to all entities targeted ({{6}}) from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_REMOVE_3(TextColors.GREEN, "Remove {{6}} to {{r}} score on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_REMOVE_4(TextColors.GREEN, "Remove {{6}} to {{r}} score on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_RESET_0(TextColors.GREEN, "Reset score of {{r}} on objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_RESET_1(TextColors.GREEN, "Reset scores of all entities registered ({{6}}) on every objectives from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_RESET_2(TextColors.GREEN, "Reset score of all entities targeted ({{6}}) on objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_RESET_3(TextColors.GREEN, "Reset score of {{r}} on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_RESET_4(TextColors.GREEN, "Reset score of {{r}} on every objectives from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_SET_0(TextColors.GREEN, "Set {{6}} to {{r}} score on objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_SET_1(TextColors.GREEN, "Set {{6}} to scores of all entities registered ({{6}}) on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_SET_2(TextColors.GREEN, "Set {{6}} to scores of all entities targeted ({{6}}) on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_SET_3(TextColors.GREEN, "Set {{6}} to {{r}} score on objective {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_PLAYERS_SET_4(TextColors.GREEN, "Set {{6}} to {{r}} score on objective {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_PLAYERS_TEST_0(TextColors.GREEN, "Test if score of {{r}} on objective {{6}} from scoreboard of {{2}} is between {{6}} and {{6}}"),
    DESC_SCOREBOARD_PLAYERS_TEST_1(TextColors.GREEN, "Test if scores of all entities registered ({{6}}) on objective {{6}} from scoreboard of current world are between {{6}} and {{6}}"),
    DESC_SCOREBOARD_PLAYERS_TEST_2(TextColors.GREEN, "Test if scores of all entities targeted ({{6}}) on objective {{6}} from scoreboard of current world are between {{6}} and {{6}}"),
    DESC_SCOREBOARD_PLAYERS_TEST_3(TextColors.GREEN, "Test if score of {{r}} on objective {{6}} from scoreboard of {{2}} is between {{6}} and {{6}}"),
    DESC_SCOREBOARD_PLAYERS_TEST_4(TextColors.GREEN, "Test if score of {{r}} on objective {{6}} from scoreboard of current world is between {{6}} and {{6}}"),
    DESC_SCOREBOARD_TEAMS_ADD_0(TextColors.GREEN, "Create a team named {{6}} on {{2}}'s scoreboard displayed as {{r}}"),
    DESC_SCOREBOARD_TEAMS_ADD_1(TextColors.GREEN, "Create a team named {{6}} on current world scoreboard"),
    DESC_SCOREBOARD_TEAMS_ADD_2(TextColors.GREEN, "Create a team named {{6}} on {{2}}'s scoreboard displayed as {{r}}"),
    DESC_SCOREBOARD_TEAMS_ADD_3(TextColors.GREEN, "Create a team named {{6}} on current world scoreboard displayed as {{r}}"),
    DESC_SCOREBOARD_TEAMS_EMPTY_0(TextColors.GREEN, "Remove all entities registered in team {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_TEAMS_EMPTY_1(TextColors.GREEN, "Remove all entities registered in team {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_JOIN_0(TextColors.GREEN, "Enroll {{r}} in team {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_TEAMS_JOIN_1(TextColors.GREEN, "Enroll all entities registered ({{6}}) in team {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_JOIN_2(TextColors.GREEN, "Enroll all entities targeted ({{6}}) in team {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_JOIN_3(TextColors.GREEN, "Enroll {{r}} in team {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_TEAMS_JOIN_4(TextColors.GREEN, "Enroll {{r}} in team {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_LEAVE_0(TextColors.GREEN, "Withdraw {{r}} from his team from scoreboard of {{2}}"),
    DESC_SCOREBOARD_TEAMS_LEAVE_1(TextColors.GREEN, "Withdraw all entities registered ({{6}}) from their teams from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_LEAVE_2(TextColors.GREEN, "Withdraw all entities targeted ({{6}}) from their teams from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_LEAVE_3(TextColors.GREEN, "Withdraw {{r}} from his team from scoreboard of {{2}}"),
    DESC_SCOREBOARD_TEAMS_LEAVE_4(TextColors.GREEN, "Withdraw {{r}} from his team from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_LIST_0(TextColors.GREEN, "Show all the teams registered from scoreboard of {{2}}"),
    DESC_SCOREBOARD_TEAMS_LIST_1(TextColors.GREEN, "Show all the entities registered in team {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_OPTION_0(TextColors.GREEN, "Set team option {{6}} to {{6}} in team {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_TEAMS_OPTION_1(TextColors.GREEN, "Set team option {{6}} to {{6}} in team {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_OPTION_2(TextColors.GREEN, "Set team option {{6}} to {{6}} in team {{6}} from scoreboard of current world"),
    DESC_SCOREBOARD_TEAMS_REMOVE_0(TextColors.GREEN, "Remove team {{6}} from scoreboard of {{2}}"),
    DESC_SCOREBOARD_TEAMS_REMOVE_1(TextColors.GREEN, "Remove team {{6}} from scoreboard of current world"),
    DESC_TIME_CALENDAR_0(TextColors.GREEN, "Show current time and day number of {{2}}"),
    DESC_TIME_CALENDAR_1(TextColors.GREEN, "Show current time and day number of current world"),
    DESC_TIME_DAWN_0(TextColors.GREEN, "Set world time of {{2}} to the nearest occurrence of dawn ({{6}} tick)"),
    DESC_TIME_DAWN_1(TextColors.GREEN, "Set world time of current world to the nearest occurrence of dawn ({{6}} tick)"),
    DESC_TIME_DUSK_0(TextColors.GREEN, "Set world time of {{2}} to the nearest occurrence of dusk ({{6}} tick)"),
    DESC_TIME_DUSK_1(TextColors.GREEN, "Set world time of current world to the nearest occurrence of dusk ({{6}} tick)"),
    DESC_TIME_IGNORE_PLAYERS_SLEEPING_0(TextColors.GREEN, "Set ignore players sleeping state to {{6}} (activated) on {{2}}"),
    DESC_TIME_IGNORE_PLAYERS_SLEEPING_1(TextColors.GREEN, "Show ignore players sleeping state of current world"),
    DESC_TIME_IGNORE_PLAYERS_SLEEPING_2(TextColors.GREEN, "Set ignore players sleeping state to {{6}} (disabled) on current world and save it to config"),
    DESC_TIME_IGNORE_PLAYERS_SLEEPING_3(TextColors.GREEN, "Show ignore players sleeping state of {{2}} and save it to config"),
    DESC_TIME_MIDDAY_0(TextColors.GREEN, "Set world time of {{2}} to the nearest occurrence of midday ({{6}} ticks)"),
    DESC_TIME_MIDDAY_1(TextColors.GREEN, "Set world time of current world to the nearest occurrence of midday ({{6}} ticks)"),
    DESC_TIME_MIDNIGHT_0(TextColors.GREEN, "Set world time of {{2}} to the nearest occurrence of midnight ({{6}} ticks)"),
    DESC_TIME_MIDNIGHT_1(TextColors.GREEN, "Set world time of current world to the nearest occurrence of midnight ({{6}} ticks)"),
    DESC_TIME_SET_0(TextColors.GREEN, "Set world time of {{2}} to {{6}}. It may impact current day number"),
    DESC_TIME_SET_1(TextColors.GREEN, "Set world time of current world to {{6}}. It may impact current day number"),
    DESC_TIME_TOMORROW_0(TextColors.GREEN, "Set world time of {{2}} to the next day"),
    DESC_TIME_TOMORROW_1(TextColors.GREEN, "Set world time of current world to the next day"),
    DESC_TIME_REAL_TIME_0(TextColors.GREEN, "Set real time state to {{6}} (activated) on {{2}}"),
    DESC_TIME_REAL_TIME_1(TextColors.GREEN, "Show real time state of current world"),
    DESC_TIME_REAL_TIME_2(TextColors.GREEN, "Set real time state to {{6}} (disabled) on current world and save it to config"),
    DESC_TIME_REAL_TIME_3(TextColors.GREEN, "Show real time state of {{2}} and save it to config"),
    DESC_UNLOAD_0(TextColors.GREEN, "Unload {{2}} from the server, players will no longer be able to join this world"),
    DESC_VIEW_DISTANCE_0(TextColors.GREEN, "Set view distance of {{2}} to {{6}} chunks"),
    DESC_VIEW_DISTANCE_1(TextColors.GREEN, "Set view distance of current world to {{6}} chunks"),
    DESC_VIEW_DISTANCE_2(TextColors.GREEN, "Show view distance of {{2}}"),
    DESC_VIEW_DISTANCE_3(TextColors.GREEN, "Show view distance of current world"),
    DESC_WEATHER_FORECAST_0(TextColors.GREEN, "Show the weather forecast on {{2}}. Sunny ? Rainy ? Stormy ? How long ?"),
    DESC_WEATHER_FORECAST_1(TextColors.GREEN, "Show the weather forecast on current world. Sunny ? Rainy ? Stormy ? How long ?"),
    DESC_WEATHER_RAIN_0(TextColors.GREEN, "Apply rainy weather on {{2}} for {{6}} seconds"),
    DESC_WEATHER_RAIN_1(TextColors.GREEN, "Apply rainy weather on current world"),
    DESC_WEATHER_SUN_0(TextColors.GREEN, "Apply sunny weather on {{2}} for {{6}} seconds"),
    DESC_WEATHER_SUN_1(TextColors.GREEN, "Apply sunny weather on current world"),
    DESC_WEATHER_THUNDER_0(TextColors.GREEN, "Apply stormy weather on {{2}} for {{6}} seconds"),
    DESC_WEATHER_THUNDER_1(TextColors.GREEN, "Apply stormy weather on current world"),

    // Errors
    CREATING_WORLD(TextColors.RED, "An error occurred while creating world named {{4}}"),
    DELETING_EXPORTED_WORLD(TextColors.RED, "An error occurred while deleting exported world named {{4}}"),
    DELETING_WORLD(TextColors.RED, "An error occurred while deleting world named {{4}} from server"),
    DELETING_WORLD_BACKUP(TextColors.RED, "An error occurred while deleting backup for world name {{4}}"),
    DELETING_WORLD_COSMOS_FILES(TextColors.RED, "Unable to delete Cosmos files of nearly deleted world named {{4}}"),
    DUPLICATING_WORLD(TextColors.RED, "An error occurred while duplicating world named {{4}} in {{4}}"),
    EMPTY_COMMAND_OUTPUT(TextColors.RED, "There is no output to show for the given command"),
    EMPTY_TEAM(TextColors.RED, "Team {{6}} is already empty, cannot remove nonexistant players"),
    EXISTING_OBJECTIVE(TextColors.RED, "An objective with the name {{6}} already exists"),
    EXISTING_TEAM(TextColors.RED, "A team with the name {{6}} already exists"),
    EXISTING_WORLD(TextColors.RED, "There is already a world named {{4}} on this server"),
    GREATER_THAN(TextColors.RED, "Given value must be greater than {{6}}"),
    IMPORTING_WORLD(TextColors.RED, "An error occurred while imported world named {{4}}"),
    IMPORTING_MISMATCHED_LEVEL_NAME(TextColors.RED, "The folder name {{4}} differs from the world name inside the level.dat file.\nImpossible to import the world.\nPlease rename the folder to {{4}}"),
    INVALID_ALL_WORLD_CHOICE(TextColors.RED, "Argument was not a valid choice (loaded, unloaded or disabled world only)"),
    INVALID_CHOICE(TextColors.RED, "Argument was not a valid choice. Valid choices: {{}}"),
    INVALID_CRITERION_CHOICE(TextColors.RED, "Argument was not a valid choice (objective criterion only)"),
    INVALID_CROSS_OPERATION(TextColors.RED, "Operations between several targets and several sources are not allowed"),
    INVALID_BLOCKS_DISTANCE(TextColors.RED, "Please insert a valid distance value in blocks"),
    INVALID_DESTINATION_TARGET(TextColors.RED, "Please insert a valid target"),
    INVALID_DIFFERENCE(TextColors.RED, "Arithmetic difference between {{6}} and {{6}} values must be higher or equal than {{}}"),
    INVALID_DISABLED_WORLD_CHOICE(TextColors.RED, "Argument was not a valid choice (disabled world only)"),
    INVALID_DISPLAY_SLOT_CHOICE(TextColors.RED, "Argument was not a valid choice (display slot only)"),
    INVALID_DURATION(TextColors.RED, "Please insert a valid duration value"),
    INVALID_EXPORTED_WORLD_CHOICE(TextColors.RED, "Argument was not a valid choice (exported world only)"),
    INVALID_GAME_RULE(TextColors.RED, "Please insert a valid game rule"),
    INVALID_LOADED_WORLD_CHOICE(TextColors.RED, "Argument was not a valid choice (loaded world only)"),
    INVALID_LOADED_UNLOADED_WORLD_CHOICE(TextColors.RED, "Argument was not a valid choice (loaded or unloaded world only)"),
    INVALID_MODIFY_COMMAND_CHOICE(TextColors.RED, "Argument was not a valid choice (modify commands only)"),
    INVALID_MODIFY_COMMAND_VALUE(TextColors.RED, "Argument was not a valid value for {{6}} modify commands"),
    INVALID_OBJECTIVE(TextColors.RED, "Please insert a valid objective"),
    INVALID_OBJECTIVE_CHOICE(TextColors.RED, "Argument was not a valid choice ({{4}}'s objectives only)"),
    INVALID_OBJECTIVE_WITH_CRITERION_CHOICE(TextColors.RED, "Argument was not a valid choice ({{4}}'s objectives with {{}} criterion only)"),
    INVALID_OPERAND_CHOICE(TextColors.RED, "Argument was not a valid choice (arithmetic operand only)"),
    INVALID_PER_WORLD_COMMAND_CHOICE(TextColors.RED, "Argument was not a valid choice (per world commands only)"),
    INVALID_UNLOADED_DISABLED_EXPORTED_WORLD_CHOICE(TextColors.RED, "Argument was not a valid choice (unloaded, disabled or exported world only)"),
    INVALID_UNLOADED_DISABLED_WORLD_CHOICE(TextColors.RED, "Argument was not a valid choice (unloaded or disabled world only)"),
    INVALID_UNLOADED_WORLD_CHOICE(TextColors.RED, "Argument was not a valid choice (unloaded world only)"),
    INVALID_TEAM(TextColors.RED, "Please insert a valid team"),
    INVALID_TEAM_CHOICE(TextColors.RED, "Argument was not a valid choice ({{4}}'s teams only)"),
    INVALID_TEAM_OPTION_CHOICE(TextColors.RED, "Argument was not a valid choice (team options only)"),
    INVALID_TEAM_OPTION_VALUE_CHOICE(TextColors.RED, "Argument was not a valid choice (values for {{6}} team option only)"),
    INVALID_VALUE(TextColors.RED, "Please insert a valid value"),
    INVALID_WORLD_BACKUP_CHOICE(TextColors.RED, "Argument was not a valid choice (world backup only)"),
    INVALID_WORLD_NAME(TextColors.RED, "Please insert a valid world name"),
    INVALID_WORLD_TIME(TextColors.RED, "Please insert a valid world time"),
    JOINING_TAB_LIST(TextColors.RED, "An error occurred while adding {{r}} to tab list of {{6}}"),
    LOADING_WORLD(TextColors.RED, "An error occurred while loading world named {{4}}"),
    LOADING_LOADED_WORLD(TextColors.RED, "World name {{4}} is already loaded"),
    MISSING_DEFAULT_WORLD(TextColors.RED, "Unable to find default world named {{4}}"),
    MISSING_DISPLAY_SLOT(TextColors.RED, "Nothing changed. That display slot is already empty (for world: {{4}})"),
    MISSING_EXPORTED_WORLD(TextColors.RED, "Unable to find exported world named {{4}}"),
    MISSING_DISABLED_WORLD(TextColors.RED, "Unable to find disabled world named {{4}}"),
    MISSING_LOADED_WORLD(TextColors.RED, "Unable to find loaded world named {{4}}"),
    MISSING_MATCHING_TARGET(TextColors.RED, "There is no matching target through selector or wildcard (for world: {{4}})"),
    MISSING_OBJECTIVE(TextColors.RED, "There are no objectives registered on the scoreboard (for world: {{4}})"),
    MISSING_TARGET_SCORE(TextColors.RED, "Target {{r}} has no score on objective {{6}}"),
    MISSING_TARGET_TEAM(TextColors.RED, "Target {{r}} has no team"),
    MISSING_TEAM(TextColors.RED, "There are no teams registered on the scoreboard (for world: {{4}})"),
    MISSING_TRACKED_PLAYERS(TextColors.RED, "There are no tracked players on the scoreboard (for world: {{4}})"),
    MISSING_TRACKED_SCORE(TextColors.RED, "Target {{r}} has no scores recorded (for world: {{4}})"),
    MISSING_WORLD(TextColors.RED, "Unable to find world named {{4}}"),
    MISSING_WORLD_BACKUP(TextColors.RED, "Unable to find world backup named {{4}}"),
    NOT_A_NUMBER(TextColors.RED, "{{6}} is not a number"),
    OVERFLOWING_OPERATION(TextColors.RED, "{{6}} result has overflowed extremum value for target {{r}}"),
    PER_WORLD_SCOREBOARDS_DISABLED(TextColors.RED, "Per world scoreboards management is currently disabled"),
    REALTIME_ALREADY_ACTIVATED(TextColors.RED, "Real time day cycle already activated for world named {{4}}"),
    REALTIME_ALREADY_DISABLED(TextColors.RED, "Real time day cycle already disabled for world named {{4}}"),
    REALTIME_DAY_LIGHT_CYCLE_LOCKED(TextColors.RED, "Impossible to run day light cycle on world named {{4}} because real time is activated"),
    REALTIME_GLOBALLY_DISABLED(TextColors.RED, "Real time management is globally disabled from Cosmos config"),
    REMOVING_TEAM(TextColors.RED, "An error occurred while removing team {{6}} (for world: {{4}})"),
    RENAMING_WORLD(TextColors.RED, "An error occurred while renaming world named {{4}} in {{4}}"),
    RESTORING_DEFAULT_WORLD(TextColors.RED, "Default world named {{4}} cannot be overwritten with a backup"),
    RESTORING_LOADED_WORLD(TextColors.RED, "You must unload world named {{4}} before restoring backup"),
    RESTORING_WORLD_BACKUP(TextColors.RED, "An error occurred while restoring world backup named {{4}}"),
    SAVING_CONFIG_NODE(TextColors.RED, "An error occurred while saving configuration node {{6}}"),
    SAVING_WORLD_BACKUP(TextColors.RED, "An error occurred while saving backup for world named {{4}}"),
    SLEEP_IGNORANCE_ALREADY_ACTIVATED(TextColors.RED, "Players sleep ignorance already activated for world named {{4}}"),
    SLEEP_IGNORANCE_ALREADY_DISABLED(TextColors.RED, "Players sleep ignorance already disabled for world named {{4}}"),
    SLEEP_IGNORANCE_GLOBALLY_DISABLED(TextColors.RED, "Players sleep ignorance management is globally disabled from Cosmos config"),
    TAGGING_WORLD_BACKUP(TextColors.RED, "An error occurred while tagging backup for world name {{4}}"),
    TESTING_SCORE(TextColors.RED, "Score {{6}} of player {{r}} is NOT in range {{6}} to {{6}}"),
    TOGGLING_PER_WORLD_LISTENER(TextColors.RED, "Per world {{6}} are already {{6}}"),
    TOO_LONG_BACKUP_TAG(TextColors.RED, "The tag '{{6}}' is too long for a backup tag, it can be at most 16 characters long"),
    TOO_LONG_OBJECTIVE_NAME(TextColors.RED, "The name '{{6}}' is too long for an objective, it can be at most 16 characters long"),
    TOO_LONG_OBJECTIVE_DISPLAY_NAME(TextColors.RED, "The display name '{{6}}' is too long for an objective, it can be at most 32 characters long"),
    TOO_LONG_TEAM_NAME(TextColors.RED, "The name '{{6}}' is too long for a team, it can be at most 16 characters long"),
    TOO_LONG_TEAM_DISPLAY_NAME(TextColors.RED, "The display name '{{6}}' is too long for a team, it can be at most 32 characters long"),
    TOO_LONG_PLAYER_NAME(TextColors.RED, "The name '{{6}}' is too long for a player, it can be at most 40 characters long"),
    TOO_MANY_CHOICES(TextColors.RED, "Too many choices to display, reducing to {{4}} first possibilities"),
    TRANSFERRING_TO_LOCATION(TextColors.RED, "{{6}} can't be {{}} transferred to {{4}} at {{}}"),
    TRANSFERRING_TO_PLAYER(TextColors.RED, "{{6}} can't be {{}} transferred to {{6}}"),
    UNLOADING_DEFAULT_WORLD(TextColors.RED, "Default world named {{4}} cannot be unloaded"),
    UNLOADING_WORLD(TextColors.RED, "An error occurred while unloading world named {{4}}"),
    UNLOADING_UNLOADED_WORLD(TextColors.RED, "World name {{4}} is already unloaded"),

    // Successes
    ADD_ENTITIES_TAG(TextColors.GREEN, "Adding tags to {{6}} entities (for world: {{2}})"),
    ADD_OBJECTIVE(TextColors.GREEN, "Added new objective {{6}} successfully (for world: {{2}})"),
    ADD_TEAM(TextColors.GREEN, "Added new team {{6}} successfully (for world: {{2}})"),
    ADD_TO_SCORE(TextColors.GREEN, "Add {{6}} to {{r}}'s score on objective {{6}} (now {{6}})"),
    ADVISE_HELP(TextColors.GREEN, "Using Cosmos {{6}} module. Check {{}} for more information"),
    BORDER_CENTER(TextColors.GREEN, "{{2}}'s border {{}} centered at {{r}}"),
    BORDER_DAMAGE_AMOUNT(TextColors.GREEN, "{{2}}'s border damage amount {{}} set to {{6}} damage per tick"),
    BORDER_DAMAGE_THRESHOLD(TextColors.GREEN, "{{2}}'s border damage threshold {{}} set to {{6}} blocks"),
    BORDER_OPERATE(TextColors.GREEN, "{{2}}'s border successfully operated from {{6}} to {{6}} blocks {{}}"),
    BORDER_REMOVE(TextColors.GREEN, "{{2}}'s border successfully removed"),
    BORDER_SIZE(TextColors.GREEN, "{{2}}'s border diameter size {{}} set to {{6}} blocks"),
    BORDER_TRANSPOSE(TextColors.GREEN, "{{2}}'s border successfully transposed from {{6}} to {{6}} blocks"),
    BORDER_WARNING_DISTANCE(TextColors.GREEN, "{{2}}'s border warning distance {{}} set to {{6}} blocks"),
    BORDER_WARNING_TIME(TextColors.GREEN, "{{2}}'s border warning time {{}} set to {{6}} seconds"),
    CALENDAR(TextColors.GREEN, "{{2}}'s time is currently {{6}} of day n°{{6}}. Real time is {{6}}"),
    CLEAR_DISPLAY_SLOT(TextColors.GREEN, "Cleared objective display slot {{6}} successfully (for world: {{2}})"),
    COMMAND_BLOCKS(TextColors.GREEN, "{{2}}'s command blocks are {{}} {{6}}"),
    CREATE_WORLD(TextColors.GREEN, "{{6}} has been created successfully"),
    DELETE_WORLD(TextColors.GREEN, "{{6}} has been deleted successfully"),
    DELETE_WORLD_BACKUP(TextColors.GREEN, "{{6}} backup has been deleted successfully"),
    DIFFICULTY(TextColors.GREEN, "{{2}}'s difficulty {{}} set to {{6}}"),
    DISABLE_WORLD(TextColors.GREEN, "{{6}} has been disabled successfully"),
    DUPLICATE_WORLD(TextColors.GREEN, "{{6}} has been duplicated as {{6}} successfully"),
    DURATION_TIME(TextColors.GREEN, "(for {{6}} seconds)"),
    ENABLE_TRIGGER(TextColors.GREEN, "Enabled trigger {{6}} for player {{r}}"),
    ENABLE_WORLD(TextColors.GREEN, "{{6}} has been enabled successfully"),
    GAME_MODE(TextColors.GREEN, "{{2}}'s game mode {{}} set to {{6}}"),
    GAME_RULES(TextColors.GREEN, "{{2}}'s game rule {{6}} {{}} set to {{6}}"),
    GENERATE_SPAWN_ON_LOAD(TextColors.GREEN, "{{2}}'s spawn generation on load {{}} {{6}}"),
    GENERATOR_TYPE(TextColors.GREEN, "{{2}}'s generator type {{}} set to {{6}}"),
    GENERATOR_TYPE_TIP(TextColors.GRAY, "Please reload {{2}} to make this change effective"),
    GET_SCORE(TextColors.GREEN, "{{r}}'s score on objective {{6}} is {{6}}"),
    HARDCORE_MODE(TextColors.GREEN, "{{2}}'s hardcore mode {{}} {{6}}"),
    HARDCORE_MODE_TIP(TextColors.GRAY, "For decorative purposes. Hardcore mode is only controlled by server.properties file. However, players that join server on hardcore worlds will have hardcore displays till they left. Those displays remain even if players join a non-hardcore world"),
    IGNORE_PLAYERS_SLEEPING(TextColors.GREEN, "{{2}}'s players sleep ignorance {{}} {{6}}"),
    IMPORT_WORLD(TextColors.GREEN, "{{6}} has been imported successfully"),
    JOIN_TEAM(TextColors.GREEN, "Added player {{r}} to team {{6}}"),
    KEEP_SPAWN_LOADED(TextColors.GREEN, "{{2}}'s spawn loading {{}} {{6}}"),
    KEEP_SPAWN_LOADED_TIP(TextColors.GRAY, "Spawn unloading of {{2}} will be effective after few seconds (if no one actually loads the spawn chunk)"),
    LEAVE_TEAM(TextColors.GREEN, "Removed player {{r}} from team {{6}}"),
    LOAD_ON_STARTUP(TextColors.GREEN, "{{2}}'s startup loading {{}} {{6}}"),
    LOAD_ON_STARTUP_TIP(TextColors.GRAY, "If the world {{2}} is disabled at server start, it will not be loaded even with this property set to true"),
    LOAD_WORLD_START(TextColors.DARK_GRAY,"{{6}} about to be loaded.."),
    LOAD_WORLD(TextColors.GREEN, "{{6}} has been loaded successfully"),
    MODIFY_OBJECTIVE(TextColors.GREEN, "Set {{6}} as {{6}} for objective {{6}} (for world {{2}})"),
    OPERATE_SCORE(TextColors.GREEN, "Operate {{6}} to {{}} {{r}} on {{6}}"),
    PVP(TextColors.GREEN, "{{2}}'s player versus player {{}} {{6}}"),
    REAL_TIME(TextColors.GREEN, "{{2}}'s real time {{}} {{6}}"),
    REMOVE_ALL_PLAYERS_FROM_TEAM(TextColors.GREEN, "Removed all {{6}} players from team {{6}} (for world: {{2}})"),
    REMOVE_ENTITIES_TAG(TextColors.GREEN, "Removing tags to {{6}} entities (for world: {{2}})"),
    REMOVE_OBJECTIVE(TextColors.GREEN, "Removed objective {{6}} successfully (for world: {{2}})"),
    REMOVE_TEAM(TextColors.GREEN, "Removed team {{6}} successfully (for world: {{2}})"),
    REMOVE_TO_SCORE(TextColors.GREEN, "Remove {{6}} to {{r}}'s score on objective {{6}} (now {{6}})"),
    RENAME_WORLD(TextColors.GREEN, "{{6}} has been renamed as {{6}} successfully"),
    RESET_SCORE(TextColors.GREEN, "Reset {{r}}'s score on objective {{6}}"),
    RESET_WORLD_BACKUP(TextColors.GREEN, "{{6}} has been reset from backup successfully"),
    RESTORE_WORLD_BACKUP(TextColors.GREEN, "{{6}} has been restored successfully"),
    SAVE_CONFIG_NODE(TextColors.GREEN, "{{6}} configuration node has been saved successfully"),
    SAVE_WORLD_BACKUP(TextColors.GREEN, "{{6}} backup has been saved successfully"),
    SET_DISPLAY_SLOT(TextColors.GREEN, "Set objective {{6}} on display slot {{6}} (for world: {{2}})"),
    SET_RANDOM_SCORE(TextColors.GREEN, "Randomly set {{6}} to {{r}} on objective {{6}}"),
    SET_SCORE(TextColors.GREEN, "Set {{6}} to {{r}} on objective {{6}}"),
    SET_TEAM_OPTION(TextColors.GREEN, "Set option {{6}} for team {{6}} to {{6}} (for world {{2}})"),
    SET_TIME(TextColors.GREEN, "{{2}}'s time successfully set to {{6}} (Day {{6}} at {{6}})"),
    SHOW_ALL_BACKUPS(TextColors.GREEN, "Showing {{6}} saved backups"),
    SHOW_ALL_TRACKED_OBJECTIVES(TextColors.GREEN, "Showing {{6}} objective(s) on scoreboard (for world: {{2}})"),
    SHOW_ALL_TRACKED_SCORES(TextColors.GREEN, "Showing scores of {{6}} target(s) (for world: {{2}})"),
    SHOW_ALL_TRACKED_TEAMS(TextColors.GREEN, "Showing {{6}} team(s) on scoreboard (for world: {{2}})"),
    SHOW_BORDER_INFORMATION(TextColors.GREEN, "Showing {{2}}'s border information"),
    SHOW_ENTITIES_TRANSPORT(TextColors.GREEN, "Showing {{6}} entities transport"),
    SHOW_ENTITIES_TAG(TextColors.GREEN, "Showing {{6}} entities tag (for world: {{2}})"),
    SHOW_HELP(TextColors.GREEN, "Showing help of {{6}} Cosmos commands"),
    SHOW_SCORE_OPERATIONS(TextColors.GREEN, "Showing {{6}} score {{}} (for world: {{2}})"),
    SHOW_TEAM_MEMBERS(TextColors.GREEN, "Showing {{6}} player(s) in team {{6}} (for world: {{2}})"),
    SHOW_TEAM_OPERATIONS(TextColors.GREEN, "Showing {{6}} team {{}} (for world: {{2}})"),
    SHOW_TRIGGER_ACTIVATIONS(TextColors.GREEN, "Showing {{6}} trigger activation(s) (for world: {{2}})"),
    SHOW_TRACKED_PLAYERS(TextColors.GREEN, "Showing {{6}} tracked player(s) (for world: {{2}})"),
    SHOW_TRACKED_SCORES(TextColors.GREEN, "Showing {{6}} score(s) of {{r}} (for world: {{2}})"),
    SHOW_TRACKED_SCORES_NESTED(TextColors.GREEN, "Showing {{6}} score(s) of {{r}}"),
    SHOW_TRACKED_OBJECTIVE(TextColors.GREEN, "- {{6}}: displays as '{{r}}' and is type '{{6}}'"),
    SHOW_TRACKED_SCORE(TextColors.GREEN, "- {{r}}: {{6}} ({{6}})"),
    SHOW_TRACKED_TEAM(TextColors.GREEN, "- {{6}}: '{{r}}' has {{6}} players"),
    SHOW_POSITION(TextColors.GREEN, "{{6}} {{}} currently at {{}} in world named {{2}}"),
    SHOW_POSITIONS(TextColors.GREEN, "Showing {{6}} player or entity positions"),
    SHOW_WORLD_BACKUPS(TextColors.GREEN, "Showing {{6}} saved backups (for world: {{2}})"),
    SPAWN_POSITION(TextColors.GREEN, "{{2}}'s spawn position {{}} placed at {{r}}"),
    TAG_WORLD_BACKUP(TextColors.GREEN, "{{6}} backup has been tagged with {{6}} successfully"),
    TEST_SCORE(TextColors.GREEN, "Score {{6}} of player {{r}} is in range {{6}} to {{6}}"),
    TOGGLE_PER_WORLD_LISTENER(TextColors.GREEN, "Per world {{6}} {{}} {{6}}"),
    TRANSFER_TO_LOCATION(TextColors.GREEN, "{{6}} {{}} {{}} been transferred to {{2}} at {{}}"),
    TRANSFER_TO_PLAYER(TextColors.GREEN, "{{6}} {{}} been {{}} transferred to {{6}}"),
    UNLOAD_WORLD(TextColors.GREEN, "{{6}} has been unloaded successfully"),
    VIEW_DISTANCE(TextColors.GREEN, "{{2}}'s view distance {{}} set to {{6}} chunks"),
    WEATHER_CHANGE(TextColors.GREEN, "Successfully set {{6}} weather on {{2}} {{}}"),
    WEATHER_FORECAST(TextColors.GREEN, "At the moment, {{2}}'s weather is {{6}} {{}}");

    private final transient TextTemplate template;
    private final TextColor defaultColor;

    Outputs(TextColor defaultColor, String format) {
        this.defaultColor = defaultColor;
        template = loadTemplate(format, defaultColor);
    }

    private static boolean isRawArg(String element) {
        return element.startsWith("{{") && element.endsWith("}}");
    }

    private static TextTemplate loadTemplate(String format, TextColor defaultColor) {
        if (format.isEmpty()) {
            return TextTemplate.EMPTY;
        }

        format = format.replaceAll("\\{\\{", "§{{").replaceAll("}}", "}}§");

        String[] rawElements = format.split("§");
        Object[] elements = new Object[rawElements.length];

        int argIndex = 0;

        for (int rawIndex = 0; rawIndex < rawElements.length; rawIndex++) {
            String rawElement = rawElements[rawIndex];
            Object element = rawElement;

            String arg = Integer.toString(argIndex);

            if (isRawArg(rawElement)) {
                String formattingCode = rawElement.replace("{{", "").replace("}}", "");

                element = FormattingCodes.getFromCode(formattingCode)
                        .map(FormattingCodes::getTextElement)
                        .map(textElement -> {
                            if (textElement instanceof TextColor) {
                                return TextTemplate.arg(arg).color((TextColor) textElement);
                            } else if (textElement instanceof TextStyle) {
                                return TextTemplate.arg(arg).style((TextStyle) textElement);
                            } else {
                                return TextTemplate.arg(arg).color(defaultColor);
                            }
                        })
                        .orElse(TextTemplate.arg(arg).color(defaultColor));

                argIndex++;
            }

            elements[rawIndex] = element;
        }

        return TextTemplate.of(elements);
    }

    public Text asText(Object... args) {
        Object[] formattedArgs = Arrays.stream(args)
                .map(OutputFormatter::formatOutput)
                .toArray();

        Map<String, Object> parametersMap = IntStream
                .range(0, formattedArgs.length)
                .distinct()
                .boxed()
                .collect(Collectors.toMap(index -> Integer.toString(index), index -> formattedArgs[index]));

        return template.apply(parametersMap).color(defaultColor).build();
    }

    public CommandException asException(Object... args) {
        return new CommandException(asText(args));
    }

    public Supplier<CommandException> asSupplier(Object... args) {
        return () -> asException(args);
    }

}
